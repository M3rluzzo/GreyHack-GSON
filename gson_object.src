// gson item - single type for objects
// =============================================================================
// main prototype - does both objects
GSON_OBJECT = {}

GSON_OBJECT.Get = function(_key, _default_value = null)
    if self.hasIndex(_key) then return self[_key]
	if _default_value != null then return _default_value
	return null
end function

// setter - works for both objects and arrays
GSON_OBJECT.Set = function(_key, _value) 
	self[str(_key)] = _value
end function

GSON_OBJECT.indexes = function()
	keys = index_func(self)
	keys.remove("__isa")
    return keys
end function

GSON_OBJECT.Has = function(_key)
    return self.hasIndex(locals._key)
end function

GSON_OBJECT.New = function(_data = null)
    instance = new GSON_OBJECT
	if _data != null then
		for key in _data.indexes
			if key != "__isa" then
				instance[key] = _data[key]
			end if
		end for
	end if
	// print("new: " + instance)

	return instance
end function
index_func = @map.indexes
